package lms_API_Test_CRUDmethods;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.bouncycastle.asn1.ocsp.Request;
import org.hamcrest.Matchers;

import static io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath;
import static org.hamcrest.MatcherAssert.assertThat;

import static org.hamcrest.Matchers.*;
import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;

import org.json.simple.JSONObject;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.Test;

import data_Provider.DataProvider_LMS;
import io.restassured.RestAssured;
import io.restassured.http.Method;
import io.restassured.parsing.Parser;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;
import io.restassured.response.ResponseBodyExtractionOptions;
import io.restassured.response.ResponseOptions;
import io.restassured.specification.RequestSpecification;





public class POSTRequest extends BaseclassforLogin{

	Response response;

	@Test(dataProvider="LMS_POST",dataProviderClass=DataProvider_LMS.class,priority=1)
	void createProgram(String XLprogId, String XLprogNam,String XLprogDes,String XLonline,String statuscode)
	{


		boolean XL_ONLINE =Boolean.parseBoolean(XLonline);  
		//creating data to send along post request
		JSONObject requestParams = new JSONObject();

		requestParams.put("programId",XLprogId );
		requestParams.put("programName", XLprogNam);
		requestParams.put("programDescription", XLprogDes);
		requestParams.put("online", XLonline);

		//add header stating the request body is json
		httprequest.header("Content-Type","application/json");
		//add json body of the request
		httprequest.body(requestParams.toJSONString());
		//send post request
		response = httprequest.request(Method.POST);

		int sc = Integer.parseInt(statuscode);
		Assert.assertEquals(response.getStatusCode(), sc);

		System.out.println("status code :::::" + response.getStatusCode());
		System.out.println("Response body is :" + response.getBody().asPrettyString());
		
		
		//JSON Representation from Response Body
		JsonPath path = JsonPath.from(response.getBody().asString());

		if(response.getStatusCode()==200) 

		{
			// get autogenerated program id from response body 

			int id = path.get("programId");			
			String progname = path.getString("programName"); 
			String progdes = path.get("programDescription"); 
			boolean Online =path.get("online");	

			System.out.println("program id is   :::::" +id);
			//	System.out.println("Program Name is  :::::" +progname);
			//	System.out.println("Program Description is :::::" +progdes);
			//	System.out.println("online           :::::" + Online);

			Assert.assertEquals(progname,XLprogNam);
			Assert.assertEquals(progdes,XLprogDes);
			Assert.assertEquals(Online, XL_ONLINE);
			
			//  Schema Validation for the post response
			
			response.then().assertThat().body(matchesJsonSchemaInClasspath("LMSJsonSchema\\PostReq_schema.json"));
			

				}
		
	}

}

